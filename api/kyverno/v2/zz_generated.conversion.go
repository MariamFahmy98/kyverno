//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v2

import (
	unsafe "unsafe"

	v1 "github.com/kyverno/kyverno/api/kyverno/v1"
	admissionregistrationv1 "k8s.io/api/admissionregistration/v1"
	v1alpha1 "k8s.io/api/admissionregistration/v1alpha1"
	apiextensionsv1 "k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*AnyAllConditions)(nil), (*v1.AnyAllConditions)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_AnyAllConditions_To_v1_AnyAllConditions(a.(*AnyAllConditions), b.(*v1.AnyAllConditions), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1.AnyAllConditions)(nil), (*AnyAllConditions)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_AnyAllConditions_To_v2_AnyAllConditions(a.(*v1.AnyAllConditions), b.(*AnyAllConditions), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClusterPolicy)(nil), (*v1.ClusterPolicy)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_ClusterPolicy_To_v1_ClusterPolicy(a.(*ClusterPolicy), b.(*v1.ClusterPolicy), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1.ClusterPolicy)(nil), (*ClusterPolicy)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_ClusterPolicy_To_v2_ClusterPolicy(a.(*v1.ClusterPolicy), b.(*ClusterPolicy), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClusterPolicyList)(nil), (*v1.ClusterPolicyList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_ClusterPolicyList_To_v1_ClusterPolicyList(a.(*ClusterPolicyList), b.(*v1.ClusterPolicyList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1.ClusterPolicyList)(nil), (*ClusterPolicyList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_ClusterPolicyList_To_v2_ClusterPolicyList(a.(*v1.ClusterPolicyList), b.(*ClusterPolicyList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Condition)(nil), (*v1.Condition)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_Condition_To_v1_Condition(a.(*Condition), b.(*v1.Condition), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1.Condition)(nil), (*Condition)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_Condition_To_v2_Condition(a.(*v1.Condition), b.(*Condition), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Deny)(nil), (*v1.Deny)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_Deny_To_v1_Deny(a.(*Deny), b.(*v1.Deny), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1.Deny)(nil), (*Deny)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_Deny_To_v2_Deny(a.(*v1.Deny), b.(*Deny), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Policy)(nil), (*v1.Policy)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_Policy_To_v1_Policy(a.(*Policy), b.(*v1.Policy), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1.Policy)(nil), (*Policy)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_Policy_To_v2_Policy(a.(*v1.Policy), b.(*Policy), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*PolicyList)(nil), (*v1.PolicyList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_PolicyList_To_v1_PolicyList(a.(*PolicyList), b.(*v1.PolicyList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1.PolicyList)(nil), (*PolicyList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_PolicyList_To_v2_PolicyList(a.(*v1.PolicyList), b.(*PolicyList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ResourceFilter)(nil), (*v1.ResourceFilter)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_ResourceFilter_To_v1_ResourceFilter(a.(*ResourceFilter), b.(*v1.ResourceFilter), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1.ResourceFilter)(nil), (*ResourceFilter)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_ResourceFilter_To_v2_ResourceFilter(a.(*v1.ResourceFilter), b.(*ResourceFilter), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Rule)(nil), (*v1.Rule)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_Rule_To_v1_Rule(a.(*Rule), b.(*v1.Rule), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1.Rule)(nil), (*Rule)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_Rule_To_v2_Rule(a.(*v1.Rule), b.(*Rule), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*TargetResourceSpec)(nil), (*v1.TargetResourceSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_TargetResourceSpec_To_v1_TargetResourceSpec(a.(*TargetResourceSpec), b.(*v1.TargetResourceSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1.TargetResourceSpec)(nil), (*TargetResourceSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_TargetResourceSpec_To_v2_TargetResourceSpec(a.(*v1.TargetResourceSpec), b.(*TargetResourceSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*WebhookConfiguration)(nil), (*v1.WebhookConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_WebhookConfiguration_To_v1_WebhookConfiguration(a.(*WebhookConfiguration), b.(*v1.WebhookConfiguration), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1.WebhookConfiguration)(nil), (*WebhookConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_WebhookConfiguration_To_v2_WebhookConfiguration(a.(*v1.WebhookConfiguration), b.(*WebhookConfiguration), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1.Attestation)(nil), (*Attestation)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_Attestation_To_v2_Attestation(a.(*v1.Attestation), b.(*Attestation), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1.Generation)(nil), (*Generation)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_Generation_To_v2_Generation(a.(*v1.Generation), b.(*Generation), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1.ImageVerification)(nil), (*ImageVerification)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_ImageVerification_To_v2_ImageVerification(a.(*v1.ImageVerification), b.(*ImageVerification), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*apiextensionsv1.JSON)(nil), (*AnyAllConditions)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_JSON_To_v2_AnyAllConditions(a.(*apiextensionsv1.JSON), b.(*AnyAllConditions), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1.MatchResources)(nil), (*MatchResources)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_MatchResources_To_v2_MatchResources(a.(*v1.MatchResources), b.(*MatchResources), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1.Mutation)(nil), (*Mutation)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_Mutation_To_v2_Mutation(a.(*v1.Mutation), b.(*Mutation), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1.ResourceDescription)(nil), (*ResourceDescription)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_ResourceDescription_To_v2_ResourceDescription(a.(*v1.ResourceDescription), b.(*ResourceDescription), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1.Spec)(nil), (*Spec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_Spec_To_v2_Spec(a.(*v1.Spec), b.(*Spec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1.Validation)(nil), (*Validation)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_Validation_To_v2_Validation(a.(*v1.Validation), b.(*Validation), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*AnyAllConditions)(nil), (*apiextensionsv1.JSON)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_AnyAllConditions_To_v1_JSON(a.(*AnyAllConditions), b.(*apiextensionsv1.JSON), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*Attestation)(nil), (*v1.Attestation)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_Attestation_To_v1_Attestation(a.(*Attestation), b.(*v1.Attestation), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*Generation)(nil), (*v1.Generation)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_Generation_To_v1_Generation(a.(*Generation), b.(*v1.Generation), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*ImageVerification)(nil), (*v1.ImageVerification)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_ImageVerification_To_v1_ImageVerification(a.(*ImageVerification), b.(*v1.ImageVerification), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*MatchResources)(nil), (*v1.MatchResources)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_MatchResources_To_v1_MatchResources(a.(*MatchResources), b.(*v1.MatchResources), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*Mutation)(nil), (*v1.Mutation)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_Mutation_To_v1_Mutation(a.(*Mutation), b.(*v1.Mutation), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*ResourceDescription)(nil), (*v1.ResourceDescription)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_ResourceDescription_To_v1_ResourceDescription(a.(*ResourceDescription), b.(*v1.ResourceDescription), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*Spec)(nil), (*v1.Spec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_Spec_To_v1_Spec(a.(*Spec), b.(*v1.Spec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*Validation)(nil), (*v1.Validation)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_Validation_To_v1_Validation(a.(*Validation), b.(*v1.Validation), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v2_AnyAllConditions_To_v1_AnyAllConditions(in *AnyAllConditions, out *v1.AnyAllConditions, s conversion.Scope) error {
	out.AnyConditions = *(*[]v1.Condition)(unsafe.Pointer(&in.AnyConditions))
	out.AllConditions = *(*[]v1.Condition)(unsafe.Pointer(&in.AllConditions))
	return nil
}

// Convert_v2_AnyAllConditions_To_v1_AnyAllConditions is an autogenerated conversion function.
func Convert_v2_AnyAllConditions_To_v1_AnyAllConditions(in *AnyAllConditions, out *v1.AnyAllConditions, s conversion.Scope) error {
	return autoConvert_v2_AnyAllConditions_To_v1_AnyAllConditions(in, out, s)
}

func autoConvert_v1_AnyAllConditions_To_v2_AnyAllConditions(in *v1.AnyAllConditions, out *AnyAllConditions, s conversion.Scope) error {
	out.AnyConditions = *(*[]Condition)(unsafe.Pointer(&in.AnyConditions))
	out.AllConditions = *(*[]Condition)(unsafe.Pointer(&in.AllConditions))
	return nil
}

// Convert_v1_AnyAllConditions_To_v2_AnyAllConditions is an autogenerated conversion function.
func Convert_v1_AnyAllConditions_To_v2_AnyAllConditions(in *v1.AnyAllConditions, out *AnyAllConditions, s conversion.Scope) error {
	return autoConvert_v1_AnyAllConditions_To_v2_AnyAllConditions(in, out, s)
}

func autoConvert_v2_ClusterPolicy_To_v1_ClusterPolicy(in *ClusterPolicy, out *v1.ClusterPolicy, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v2_Spec_To_v1_Spec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	out.Status = in.Status
	return nil
}

// Convert_v2_ClusterPolicy_To_v1_ClusterPolicy is an autogenerated conversion function.
func Convert_v2_ClusterPolicy_To_v1_ClusterPolicy(in *ClusterPolicy, out *v1.ClusterPolicy, s conversion.Scope) error {
	return autoConvert_v2_ClusterPolicy_To_v1_ClusterPolicy(in, out, s)
}

func autoConvert_v1_ClusterPolicy_To_v2_ClusterPolicy(in *v1.ClusterPolicy, out *ClusterPolicy, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1_Spec_To_v2_Spec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	out.Status = in.Status
	return nil
}

// Convert_v1_ClusterPolicy_To_v2_ClusterPolicy is an autogenerated conversion function.
func Convert_v1_ClusterPolicy_To_v2_ClusterPolicy(in *v1.ClusterPolicy, out *ClusterPolicy, s conversion.Scope) error {
	return autoConvert_v1_ClusterPolicy_To_v2_ClusterPolicy(in, out, s)
}

func autoConvert_v2_ClusterPolicyList_To_v1_ClusterPolicyList(in *ClusterPolicyList, out *v1.ClusterPolicyList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]v1.ClusterPolicy, len(*in))
		for i := range *in {
			if err := Convert_v2_ClusterPolicy_To_v1_ClusterPolicy(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v2_ClusterPolicyList_To_v1_ClusterPolicyList is an autogenerated conversion function.
func Convert_v2_ClusterPolicyList_To_v1_ClusterPolicyList(in *ClusterPolicyList, out *v1.ClusterPolicyList, s conversion.Scope) error {
	return autoConvert_v2_ClusterPolicyList_To_v1_ClusterPolicyList(in, out, s)
}

func autoConvert_v1_ClusterPolicyList_To_v2_ClusterPolicyList(in *v1.ClusterPolicyList, out *ClusterPolicyList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClusterPolicy, len(*in))
		for i := range *in {
			if err := Convert_v1_ClusterPolicy_To_v2_ClusterPolicy(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1_ClusterPolicyList_To_v2_ClusterPolicyList is an autogenerated conversion function.
func Convert_v1_ClusterPolicyList_To_v2_ClusterPolicyList(in *v1.ClusterPolicyList, out *ClusterPolicyList, s conversion.Scope) error {
	return autoConvert_v1_ClusterPolicyList_To_v2_ClusterPolicyList(in, out, s)
}

func autoConvert_v2_Condition_To_v1_Condition(in *Condition, out *v1.Condition, s conversion.Scope) error {
	out.RawKey = (*apiextensionsv1.JSON)(unsafe.Pointer(in.RawKey))
	out.Operator = v1.ConditionOperator(in.Operator)
	out.RawValue = (*apiextensionsv1.JSON)(unsafe.Pointer(in.RawValue))
	out.Message = in.Message
	return nil
}

// Convert_v2_Condition_To_v1_Condition is an autogenerated conversion function.
func Convert_v2_Condition_To_v1_Condition(in *Condition, out *v1.Condition, s conversion.Scope) error {
	return autoConvert_v2_Condition_To_v1_Condition(in, out, s)
}

func autoConvert_v1_Condition_To_v2_Condition(in *v1.Condition, out *Condition, s conversion.Scope) error {
	out.RawKey = (*apiextensionsv1.JSON)(unsafe.Pointer(in.RawKey))
	out.Operator = ConditionOperator(in.Operator)
	out.RawValue = (*apiextensionsv1.JSON)(unsafe.Pointer(in.RawValue))
	out.Message = in.Message
	return nil
}

// Convert_v1_Condition_To_v2_Condition is an autogenerated conversion function.
func Convert_v1_Condition_To_v2_Condition(in *v1.Condition, out *Condition, s conversion.Scope) error {
	return autoConvert_v1_Condition_To_v2_Condition(in, out, s)
}

func autoConvert_v2_Deny_To_v1_Deny(in *Deny, out *v1.Deny, s conversion.Scope) error {
	if in.RawAnyAllConditions != nil {
		in, out := &in.RawAnyAllConditions, &out.RawAnyAllConditions
		*out = new(apiextensionsv1.JSON)
		if err := Convert_v2_AnyAllConditions_To_v1_JSON(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.RawAnyAllConditions = nil
	}
	return nil
}

// Convert_v2_Deny_To_v1_Deny is an autogenerated conversion function.
func Convert_v2_Deny_To_v1_Deny(in *Deny, out *v1.Deny, s conversion.Scope) error {
	return autoConvert_v2_Deny_To_v1_Deny(in, out, s)
}

func autoConvert_v1_Deny_To_v2_Deny(in *v1.Deny, out *Deny, s conversion.Scope) error {
	if in.RawAnyAllConditions != nil {
		in, out := &in.RawAnyAllConditions, &out.RawAnyAllConditions
		*out = new(AnyAllConditions)
		if err := Convert_v1_JSON_To_v2_AnyAllConditions(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.RawAnyAllConditions = nil
	}
	return nil
}

// Convert_v1_Deny_To_v2_Deny is an autogenerated conversion function.
func Convert_v1_Deny_To_v2_Deny(in *v1.Deny, out *Deny, s conversion.Scope) error {
	return autoConvert_v1_Deny_To_v2_Deny(in, out, s)
}

func autoConvert_v2_Policy_To_v1_Policy(in *Policy, out *v1.Policy, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v2_Spec_To_v1_Spec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	out.Status = in.Status
	return nil
}

// Convert_v2_Policy_To_v1_Policy is an autogenerated conversion function.
func Convert_v2_Policy_To_v1_Policy(in *Policy, out *v1.Policy, s conversion.Scope) error {
	return autoConvert_v2_Policy_To_v1_Policy(in, out, s)
}

func autoConvert_v1_Policy_To_v2_Policy(in *v1.Policy, out *Policy, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1_Spec_To_v2_Spec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	out.Status = in.Status
	return nil
}

// Convert_v1_Policy_To_v2_Policy is an autogenerated conversion function.
func Convert_v1_Policy_To_v2_Policy(in *v1.Policy, out *Policy, s conversion.Scope) error {
	return autoConvert_v1_Policy_To_v2_Policy(in, out, s)
}

func autoConvert_v2_PolicyList_To_v1_PolicyList(in *PolicyList, out *v1.PolicyList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]v1.Policy, len(*in))
		for i := range *in {
			if err := Convert_v2_Policy_To_v1_Policy(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v2_PolicyList_To_v1_PolicyList is an autogenerated conversion function.
func Convert_v2_PolicyList_To_v1_PolicyList(in *PolicyList, out *v1.PolicyList, s conversion.Scope) error {
	return autoConvert_v2_PolicyList_To_v1_PolicyList(in, out, s)
}

func autoConvert_v1_PolicyList_To_v2_PolicyList(in *v1.PolicyList, out *PolicyList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Policy, len(*in))
		for i := range *in {
			if err := Convert_v1_Policy_To_v2_Policy(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1_PolicyList_To_v2_PolicyList is an autogenerated conversion function.
func Convert_v1_PolicyList_To_v2_PolicyList(in *v1.PolicyList, out *PolicyList, s conversion.Scope) error {
	return autoConvert_v1_PolicyList_To_v2_PolicyList(in, out, s)
}

func autoConvert_v2_ResourceFilter_To_v1_ResourceFilter(in *ResourceFilter, out *v1.ResourceFilter, s conversion.Scope) error {
	out.UserInfo = in.UserInfo
	if err := Convert_v2_ResourceDescription_To_v1_ResourceDescription(&in.ResourceDescription, &out.ResourceDescription, s); err != nil {
		return err
	}
	return nil
}

// Convert_v2_ResourceFilter_To_v1_ResourceFilter is an autogenerated conversion function.
func Convert_v2_ResourceFilter_To_v1_ResourceFilter(in *ResourceFilter, out *v1.ResourceFilter, s conversion.Scope) error {
	return autoConvert_v2_ResourceFilter_To_v1_ResourceFilter(in, out, s)
}

func autoConvert_v1_ResourceFilter_To_v2_ResourceFilter(in *v1.ResourceFilter, out *ResourceFilter, s conversion.Scope) error {
	out.UserInfo = in.UserInfo
	if err := Convert_v1_ResourceDescription_To_v2_ResourceDescription(&in.ResourceDescription, &out.ResourceDescription, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1_ResourceFilter_To_v2_ResourceFilter is an autogenerated conversion function.
func Convert_v1_ResourceFilter_To_v2_ResourceFilter(in *v1.ResourceFilter, out *ResourceFilter, s conversion.Scope) error {
	return autoConvert_v1_ResourceFilter_To_v2_ResourceFilter(in, out, s)
}

func autoConvert_v2_Rule_To_v1_Rule(in *Rule, out *v1.Rule, s conversion.Scope) error {
	out.Name = in.Name
	out.Context = *(*[]v1.ContextEntry)(unsafe.Pointer(&in.Context))
	if err := Convert_v2_MatchResources_To_v1_MatchResources(&in.MatchResources, &out.MatchResources, s); err != nil {
		return err
	}
	if err := Convert_v2_MatchResources_To_v1_MatchResources(&in.ExcludeResources, &out.ExcludeResources, s); err != nil {
		return err
	}
	out.ImageExtractors = *(*v1.ImageExtractorConfigs)(unsafe.Pointer(&in.ImageExtractors))
	if in.RawAnyAllConditions != nil {
		in, out := &in.RawAnyAllConditions, &out.RawAnyAllConditions
		*out = new(apiextensionsv1.JSON)
		if err := Convert_v2_AnyAllConditions_To_v1_JSON(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.RawAnyAllConditions = nil
	}
	out.CELPreconditions = *(*[]v1alpha1.MatchCondition)(unsafe.Pointer(&in.CELPreconditions))
	if err := Convert_v2_Mutation_To_v1_Mutation(&in.Mutation, &out.Mutation, s); err != nil {
		return err
	}
	if err := Convert_v2_Validation_To_v1_Validation(&in.Validation, &out.Validation, s); err != nil {
		return err
	}
	if err := Convert_v2_Generation_To_v1_Generation(&in.Generation, &out.Generation, s); err != nil {
		return err
	}
	if in.VerifyImages != nil {
		in, out := &in.VerifyImages, &out.VerifyImages
		*out = make([]v1.ImageVerification, len(*in))
		for i := range *in {
			if err := Convert_v2_ImageVerification_To_v1_ImageVerification(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.VerifyImages = nil
	}
	out.SkipBackgroundRequests = in.SkipBackgroundRequests
	return nil
}

// Convert_v2_Rule_To_v1_Rule is an autogenerated conversion function.
func Convert_v2_Rule_To_v1_Rule(in *Rule, out *v1.Rule, s conversion.Scope) error {
	return autoConvert_v2_Rule_To_v1_Rule(in, out, s)
}

func autoConvert_v1_Rule_To_v2_Rule(in *v1.Rule, out *Rule, s conversion.Scope) error {
	out.Name = in.Name
	out.Context = *(*[]v1.ContextEntry)(unsafe.Pointer(&in.Context))
	if err := Convert_v1_MatchResources_To_v2_MatchResources(&in.MatchResources, &out.MatchResources, s); err != nil {
		return err
	}
	if err := Convert_v1_MatchResources_To_v2_MatchResources(&in.ExcludeResources, &out.ExcludeResources, s); err != nil {
		return err
	}
	out.ImageExtractors = *(*v1.ImageExtractorConfigs)(unsafe.Pointer(&in.ImageExtractors))
	if in.RawAnyAllConditions != nil {
		in, out := &in.RawAnyAllConditions, &out.RawAnyAllConditions
		*out = new(AnyAllConditions)
		if err := Convert_v1_JSON_To_v2_AnyAllConditions(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.RawAnyAllConditions = nil
	}
	out.CELPreconditions = *(*[]admissionregistrationv1.MatchCondition)(unsafe.Pointer(&in.CELPreconditions))
	if err := Convert_v1_Mutation_To_v2_Mutation(&in.Mutation, &out.Mutation, s); err != nil {
		return err
	}
	if err := Convert_v1_Validation_To_v2_Validation(&in.Validation, &out.Validation, s); err != nil {
		return err
	}
	if err := Convert_v1_Generation_To_v2_Generation(&in.Generation, &out.Generation, s); err != nil {
		return err
	}
	if in.VerifyImages != nil {
		in, out := &in.VerifyImages, &out.VerifyImages
		*out = make([]ImageVerification, len(*in))
		for i := range *in {
			if err := Convert_v1_ImageVerification_To_v2_ImageVerification(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.VerifyImages = nil
	}
	out.SkipBackgroundRequests = in.SkipBackgroundRequests
	return nil
}

// Convert_v1_Rule_To_v2_Rule is an autogenerated conversion function.
func Convert_v1_Rule_To_v2_Rule(in *v1.Rule, out *Rule, s conversion.Scope) error {
	return autoConvert_v1_Rule_To_v2_Rule(in, out, s)
}

func autoConvert_v2_TargetResourceSpec_To_v1_TargetResourceSpec(in *TargetResourceSpec, out *v1.TargetResourceSpec, s conversion.Scope) error {
	out.ResourceSpec = in.ResourceSpec
	out.Context = *(*[]v1.ContextEntry)(unsafe.Pointer(&in.Context))
	if in.RawAnyAllConditions != nil {
		in, out := &in.RawAnyAllConditions, &out.RawAnyAllConditions
		*out = new(apiextensionsv1.JSON)
		if err := Convert_v2_AnyAllConditions_To_v1_JSON(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.RawAnyAllConditions = nil
	}
	return nil
}

// Convert_v2_TargetResourceSpec_To_v1_TargetResourceSpec is an autogenerated conversion function.
func Convert_v2_TargetResourceSpec_To_v1_TargetResourceSpec(in *TargetResourceSpec, out *v1.TargetResourceSpec, s conversion.Scope) error {
	return autoConvert_v2_TargetResourceSpec_To_v1_TargetResourceSpec(in, out, s)
}

func autoConvert_v1_TargetResourceSpec_To_v2_TargetResourceSpec(in *v1.TargetResourceSpec, out *TargetResourceSpec, s conversion.Scope) error {
	out.ResourceSpec = in.ResourceSpec
	out.Context = *(*[]v1.ContextEntry)(unsafe.Pointer(&in.Context))
	if in.RawAnyAllConditions != nil {
		in, out := &in.RawAnyAllConditions, &out.RawAnyAllConditions
		*out = new(AnyAllConditions)
		if err := Convert_v1_JSON_To_v2_AnyAllConditions(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.RawAnyAllConditions = nil
	}
	return nil
}

// Convert_v1_TargetResourceSpec_To_v2_TargetResourceSpec is an autogenerated conversion function.
func Convert_v1_TargetResourceSpec_To_v2_TargetResourceSpec(in *v1.TargetResourceSpec, out *TargetResourceSpec, s conversion.Scope) error {
	return autoConvert_v1_TargetResourceSpec_To_v2_TargetResourceSpec(in, out, s)
}

func autoConvert_v2_WebhookConfiguration_To_v1_WebhookConfiguration(in *WebhookConfiguration, out *v1.WebhookConfiguration, s conversion.Scope) error {
	out.MatchConditions = *(*[]admissionregistrationv1.MatchCondition)(unsafe.Pointer(&in.MatchConditions))
	return nil
}

// Convert_v2_WebhookConfiguration_To_v1_WebhookConfiguration is an autogenerated conversion function.
func Convert_v2_WebhookConfiguration_To_v1_WebhookConfiguration(in *WebhookConfiguration, out *v1.WebhookConfiguration, s conversion.Scope) error {
	return autoConvert_v2_WebhookConfiguration_To_v1_WebhookConfiguration(in, out, s)
}

func autoConvert_v1_WebhookConfiguration_To_v2_WebhookConfiguration(in *v1.WebhookConfiguration, out *WebhookConfiguration, s conversion.Scope) error {
	out.MatchConditions = *(*[]admissionregistrationv1.MatchCondition)(unsafe.Pointer(&in.MatchConditions))
	return nil
}

// Convert_v1_WebhookConfiguration_To_v2_WebhookConfiguration is an autogenerated conversion function.
func Convert_v1_WebhookConfiguration_To_v2_WebhookConfiguration(in *v1.WebhookConfiguration, out *WebhookConfiguration, s conversion.Scope) error {
	return autoConvert_v1_WebhookConfiguration_To_v2_WebhookConfiguration(in, out, s)
}
